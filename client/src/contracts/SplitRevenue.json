{
  "contractName": "SplitRevenue",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "artist",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x43bc1612"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stopped",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x75f12b21"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "fansCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8345a7cb"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8f32d59b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc040e6b8"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "fanExists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc2104320"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "artistFeatured",
          "type": "address"
        }
      ],
      "name": "ArtistAddition",
      "type": "event",
      "signature": "0x0c5643058425ee9c945efd0ec355f9b98c17a3856f332070b09a602ea26b6782"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fansFeatured",
          "type": "address"
        }
      ],
      "name": "FanAddition",
      "type": "event",
      "signature": "0x2fc7e8c17ce2f5435475f926e84e7e4a0fa2000f9f6c84df6bcff4898c4bb5c2"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "revenue",
          "type": "uint256"
        }
      ],
      "name": "RevenueDeposit",
      "type": "event",
      "signature": "0xb222f36afc6c823bc44e2b8f7e372f27bbdb08d0863249bc335db897548205cc"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "artistRevenuePayment",
          "type": "uint256"
        }
      ],
      "name": "ArtistRevenuePayment",
      "type": "event",
      "signature": "0xd60807f578b1286f5aa704587507d19c87bb9d059985f25ab3d2ec82eff0d61f"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "fanRevenuePayment",
          "type": "uint256"
        }
      ],
      "name": "FanRevenuePayment",
      "type": "event",
      "signature": "0x3b12b0dc45bd00150a75f13c8a409351f6e9488b67dce5eef7433b70cc429969"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "message",
          "type": "string"
        }
      ],
      "name": "SelfDestruction",
      "type": "event",
      "signature": "0xa0723314964f9a7c7bfe659adacc8bdab8884c55dfe4bc02f344b80d5e39aed7"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "paySplit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function",
      "signature": "0x1ec94f8c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_artist",
          "type": "address"
        }
      ],
      "name": "addArtist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x4d287f2b"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fan",
          "type": "address"
        }
      ],
      "name": "addFan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x678dbca5"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "openSplit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf7afb433"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x3ccfd60b"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "emergency",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xcaa6fea4"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x41c0e1b5"
    }
  ],
  "bytecode": "0x60806040526000600760006101000a81548160ff0219169083600181111561002357fe5b02179055506000600760016101000a81548160ff02191690831515021790555034801561004f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060048190555060006006819055506000600581905550611ac4806100b76000396000f3fe6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ec94f8c146100d55780633ccfd60b146100df57806341c0e1b5146100f657806343bc16121461010d5780634d287f2b14610164578063678dbca5146101b557806375f12b21146102065780638345a7cb146102355780638da5cb5b146102605780638f32d59b146102b7578063c040e6b8146102e6578063c21043201461031f578063caa6fea414610388578063f7afb4331461039f575b600080fd5b6100dd6103b6565b005b3480156100eb57600080fd5b506100f46106bf565b005b34801561010257600080fd5b5061010b610a0d565b005b34801561011957600080fd5b50610122610b5f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017057600080fd5b506101b36004803603602081101561018757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b85565b005b3480156101c157600080fd5b50610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e75565b005b34801561021257600080fd5b5061021b61125f565b604051808215151515815260200191505060405180910390f35b34801561024157600080fd5b5061024a611272565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b50610275611278565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c357600080fd5b506102cc6112a1565b604051808215151515815260200191505060405180910390f35b3480156102f257600080fd5b506102fb6112f8565b6040518082600181111561030b57fe5b60ff16815260200191505060405180910390f35b34801561032b57600080fd5b5061036e6004803603602081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061130b565b604051808215151515815260200191505060405180910390f35b34801561039457600080fd5b5061039d61132b565b005b3480156103ab57600080fd5b506103b461142f565b005b60018060018111156103c457fe5b600760009054906101000a900460ff1660018111156103df57fe5b14151561047a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600760019054906101000a900460ff16151515610525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f456d657267656e63793b20746869732066756e6374696f6e2063616e206e6f7481526020017f2062652063616c6c65642e00000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000341115156105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f656e6f7567682066756e64732068617665206e6f74206265656e2070726f766981526020017f646564000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60016006541015151561063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6e6f7420656e6f7567682066616e7320696e20636f6e7472616374000000000081525060200191505060405180910390fd5b61066661065560023461151190919063ffffffff16565b60045461153b90919063ffffffff16565b60048190555061068060023461151190919063ffffffff16565b600560008282540192505081905550347fb222f36afc6c823bc44e2b8f7e372f27bbdb08d0863249bc335db897548205cc60405160405180910390a250565b60018060018111156106cd57fe5b600760009054906101000a900460ff1660018111156106e857fe5b141515610783576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631111515610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f636f6e74726163742062616c616e6365206973206e6f7420656e6f756768206681526020017f6f7220776974686472617700000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600654101515156108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6e6f7420656e6f7567682066616e7320696e20636f6e7472616374000000000081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109125761090d61155c565b610a0a565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561097557610970611843565b610a09565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f6d73672e73656e646572206973206e6f7420612066616e206f7220616e20617281526020017f746973740000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b50565b610a156112a1565b1515610a2057600080fd5b6000806001811115610a2e57fe5b600760009054906101000a900460ff166001811115610a4957fe5b141515610ae4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60405180807f436f6e74726163742053656c6620446573747275637465640000000000000000815250601801905060405180910390207fa0723314964f9a7c7bfe659adacc8bdab8884c55dfe4bc02f344b80d5e39aed760405160405180910390a23373ffffffffffffffffffffffffffffffffffffffff16ff5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b8d6112a1565b1515610b9857600080fd5b6000806001811115610ba657fe5b600760009054906101000a900460ff166001811115610bc157fe5b141515610c5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f796f752068617665206e6f7420737570706c69656420612076616c696420616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610ded576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f617274697374206164647265737320616c72656164792065786973747300000081525060200191505060405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f0c5643058425ee9c945efd0ec355f9b98c17a3856f332070b09a602ea26b678260405160405180910390a25050565b610e7d6112a1565b1515610e8857600080fd5b6000806001811115610e9657fe5b600760009054906101000a900460ff166001811115610eb157fe5b141515610f4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611012576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6164647265737320697320616c7265616479207468652061727469737400000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f796f752068617665206e6f7420737570706c69656420612076616c696420616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60001515600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f66616e206164647265737320616c72656164792065786973747300000000000081525060200191505060405180910390fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611212600160065461153b90919063ffffffff16565b6006819055508173ffffffffffffffffffffffffffffffffffffffff167f2fc7e8c17ce2f5435475f926e84e7e4a0fa2000f9f6c84df6bcff4898c4bb5c260405160405180910390a25050565b600760019054906101000a900460ff1681565b60065481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600760009054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b6113336112a1565b151561133e57600080fd5b600180600181111561134c57fe5b600760009054906101000a900460ff16600181111561136757fe5b141515611402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600760019054906101000a900460ff1615600760016101000a81548160ff02191690831515021790555050565b6114376112a1565b151561144257600080fd5b600080600181111561145057fe5b600760009054906101000a900460ff16600181111561146b57fe5b141515611506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61150e611a29565b50565b6000808211151561152157600080fd5b6000828481151561152e57fe5b0490508091505092915050565b600080828401905083811015151561155257600080fd5b8091505092915050565b600180600181111561156a57fe5b600760009054906101000a900460ff16600181111561158557fe5b141515611620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600061168a600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461167c60065460055461151190919063ffffffff16565b611a7690919063ffffffff16565b905060008114151515611705576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7061796d656e742069732030000000000000000000000000000000000000000081525060200191505060405180910390fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561172857fe5b806005541015151561173657fe5b61178881600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611811573d6000803e3d6000fd5b50807f3b12b0dc45bd00150a75f13c8a409351f6e9488b67dce5eef7433b70cc42996960405160405180910390a25050565b600180600181111561185157fe5b600760009054906101000a900460ff16600181111561186c57fe5b141515611907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600454905060008114151515611987576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6172746973742062616c616e636520697320300000000000000000000000000081525060200191505060405180910390fd5b6000600481905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156119f7573d6000803e3d6000fd5b50807fd60807f578b1286f5aa704587507d19c87bb9d059985f25ab3d2ec82eff0d61f60405160405180910390a25050565b6001600760009054906101000a900460ff166001811115611a4657fe5b016001811115611a5257fe5b600760006101000a81548160ff02191690836001811115611a6f57fe5b0217905550565b6000828211151515611a8757600080fd5b60008284039050809150509291505056fea165627a7a7230582092bb726637d61ac79d8268035a0f344ac0717330f5c5554d2c7483de27c327240029",
  "deployedBytecode": "0x6080604052600436106100d0576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631ec94f8c146100d55780633ccfd60b146100df57806341c0e1b5146100f657806343bc16121461010d5780634d287f2b14610164578063678dbca5146101b557806375f12b21146102065780638345a7cb146102355780638da5cb5b146102605780638f32d59b146102b7578063c040e6b8146102e6578063c21043201461031f578063caa6fea414610388578063f7afb4331461039f575b600080fd5b6100dd6103b6565b005b3480156100eb57600080fd5b506100f46106bf565b005b34801561010257600080fd5b5061010b610a0d565b005b34801561011957600080fd5b50610122610b5f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017057600080fd5b506101b36004803603602081101561018757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b85565b005b3480156101c157600080fd5b50610204600480360360208110156101d857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e75565b005b34801561021257600080fd5b5061021b61125f565b604051808215151515815260200191505060405180910390f35b34801561024157600080fd5b5061024a611272565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b50610275611278565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102c357600080fd5b506102cc6112a1565b604051808215151515815260200191505060405180910390f35b3480156102f257600080fd5b506102fb6112f8565b6040518082600181111561030b57fe5b60ff16815260200191505060405180910390f35b34801561032b57600080fd5b5061036e6004803603602081101561034257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061130b565b604051808215151515815260200191505060405180910390f35b34801561039457600080fd5b5061039d61132b565b005b3480156103ab57600080fd5b506103b461142f565b005b60018060018111156103c457fe5b600760009054906101000a900460ff1660018111156103df57fe5b14151561047a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600760019054906101000a900460ff16151515610525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f456d657267656e63793b20746869732066756e6374696f6e2063616e206e6f7481526020017f2062652063616c6c65642e00000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000341115156105c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001807f656e6f7567682066756e64732068617665206e6f74206265656e2070726f766981526020017f646564000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60016006541015151561063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6e6f7420656e6f7567682066616e7320696e20636f6e7472616374000000000081525060200191505060405180910390fd5b61066661065560023461151190919063ffffffff16565b60045461153b90919063ffffffff16565b60048190555061068060023461151190919063ffffffff16565b600560008282540192505081905550347fb222f36afc6c823bc44e2b8f7e372f27bbdb08d0863249bc335db897548205cc60405160405180910390a250565b60018060018111156106cd57fe5b600760009054906101000a900460ff1660018111156106e857fe5b141515610783576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60003073ffffffffffffffffffffffffffffffffffffffff1631111515610838576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001807f636f6e74726163742062616c616e6365206973206e6f7420656e6f756768206681526020017f6f7220776974686472617700000000000000000000000000000000000000000081525060400191505060405180910390fd5b6001600654101515156108b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f6e6f7420656e6f7567682066616e7320696e20636f6e7472616374000000000081525060200191505060405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156109125761090d61155c565b610a0a565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561097557610970611843565b610a09565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001807f6d73672e73656e646572206973206e6f7420612066616e206f7220616e20617281526020017f746973740000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b5b50565b610a156112a1565b1515610a2057600080fd5b6000806001811115610a2e57fe5b600760009054906101000a900460ff166001811115610a4957fe5b141515610ae4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60405180807f436f6e74726163742053656c6620446573747275637465640000000000000000815250601801905060405180910390207fa0723314964f9a7c7bfe659adacc8bdab8884c55dfe4bc02f344b80d5e39aed760405160405180910390a23373ffffffffffffffffffffffffffffffffffffffff16ff5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b8d6112a1565b1515610b9857600080fd5b6000806001811115610ba657fe5b600760009054906101000a900460ff166001811115610bc157fe5b141515610c5c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d27576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f796f752068617665206e6f7420737570706c69656420612076616c696420616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610ded576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f617274697374206164647265737320616c72656164792065786973747300000081525060200191505060405180910390fd5b81600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff167f0c5643058425ee9c945efd0ec355f9b98c17a3856f332070b09a602ea26b678260405160405180910390a25050565b610e7d6112a1565b1515610e8857600080fd5b6000806001811115610e9657fe5b600760009054906101000a900460ff166001811115610eb157fe5b141515610f4c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611012576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f6164647265737320697320616c7265616479207468652061727469737400000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156110dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001807f796f752068617665206e6f7420737570706c69656420612076616c696420616481526020017f647265737300000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b60001515600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156111a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f66616e206164647265737320616c72656164792065786973747300000000000081525060200191505060405180910390fd5b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611212600160065461153b90919063ffffffff16565b6006819055508173ffffffffffffffffffffffffffffffffffffffff167f2fc7e8c17ce2f5435475f926e84e7e4a0fa2000f9f6c84df6bcff4898c4bb5c260405160405180910390a25050565b600760019054906101000a900460ff1681565b60065481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600760009054906101000a900460ff1681565b60016020528060005260406000206000915054906101000a900460ff1681565b6113336112a1565b151561133e57600080fd5b600180600181111561134c57fe5b600760009054906101000a900460ff16600181111561136757fe5b141515611402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600760019054906101000a900460ff1615600760016101000a81548160ff02191690831515021790555050565b6114376112a1565b151561144257600080fd5b600080600181111561145057fe5b600760009054906101000a900460ff16600181111561146b57fe5b141515611506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b61150e611a29565b50565b6000808211151561152157600080fd5b6000828481151561152e57fe5b0490508091505092915050565b600080828401905083811015151561155257600080fd5b8091505092915050565b600180600181111561156a57fe5b600760009054906101000a900460ff16600181111561158557fe5b141515611620576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b600061168a600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461167c60065460055461151190919063ffffffff16565b611a7690919063ffffffff16565b905060008114151515611705576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600c8152602001807f7061796d656e742069732030000000000000000000000000000000000000000081525060200191505060405180910390fd5b803073ffffffffffffffffffffffffffffffffffffffff16311015151561172857fe5b806005541015151561173657fe5b61178881600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461153b90919063ffffffff16565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611811573d6000803e3d6000fd5b50807f3b12b0dc45bd00150a75f13c8a409351f6e9488b67dce5eef7433b70cc42996960405160405180910390a25050565b600180600181111561185157fe5b600760009054906101000a900460ff16600181111561186c57fe5b141515611907576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001807f46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746881526020017f69732074696d652e00000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b6000600454905060008114151515611987576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f6172746973742062616c616e636520697320300000000000000000000000000081525060200191505060405180910390fd5b6000600481905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156119f7573d6000803e3d6000fd5b50807fd60807f578b1286f5aa704587507d19c87bb9d059985f25ab3d2ec82eff0d61f60405160405180910390a25050565b6001600760009054906101000a900460ff166001811115611a4657fe5b016001811115611a5257fe5b600760006101000a81548160ff02191690836001811115611a6f57fe5b0217905550565b6000828211151515611a8757600080fd5b60008284039050809150509291505056fea165627a7a7230582092bb726637d61ac79d8268035a0f344ac0717330f5c5554d2c7483de27c327240029",
  "sourceMap": "224:6296:3:-;;;1017:15;995:37;;;;;;;;;;;;;;;;;;;;;;;;;;1377:5;1355:27;;;;;;;;;;;;;;;;;;;;1643:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;1643:104:3;423:10:1;414:6;;:19;;;;;;;;;;;;;;;;;;1688:1:3;1674:11;:15;;;;1711:1;1699:9;:13;;;;1739:1;1722:14;:18;;;;224:6296;;;;;;",
  "deployedSourceMap": "224:6296:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1951:457;;;;;;3939:483;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3939:483:3;;;;;;4818:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4818:206:3;;;;;;768:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;768:29:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:353;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2592:353:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2592:353:3;;;;;;;;;;;;;;;;;;;;;;3102:442;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3102:442:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3102:442:3;;;;;;;;;;;;;;;;;;;;;;1355:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1355:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;925:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;925:24:3;;;;;;;;;;;;;;;;;;;;;;;493:70:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;493:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;780:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;780:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;995:37:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;995:37:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:41;;8:9:-1;5:2;;;30:1;27;20:12;5:2;647:41:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;647:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4576:126;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4576:126:3;;;;;;3688:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3688:124:3;;;;;;1951:457;2023:11;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1433:7;;;;;;;;;;;1432:8;1424:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2096:1;2084:9;:13;2076:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2222:1;2209:9;;:14;;2201:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2281:33;2297:16;2311:1;2297:9;:13;;:16;;;;:::i;:::-;2281:11;;:15;;:33;;;;:::i;:::-;2266:11;:48;;;;2343:16;2357:1;2343:9;:13;;:16;;;;:::i;:::-;2325:14;;:34;;;;;;;;;;;2391:9;2376:25;;;;;;;;;;1951:457;:::o;3939:483::-;3992:11;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4072:1;4056:4;4048:21;;;:25;4040:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4152:1;4139:9;;:14;;4131:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4207:9;:21;4217:10;4207:21;;;;;;;;;;;;;;;;;;;;;;;;;4204:212;;;4243:13;:11;:13::i;:::-;4204:212;;;4290:6;;;;;;;;;;;4276:20;;:10;:20;;;4273:143;;;4312:16;:14;:16::i;:::-;4273:143;;;4359:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4273:143;4204:212;3939:483;:::o;4818:206::-;678:9:1;:7;:9::i;:::-;670:18;;;;;;;;4886:15:3;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4923:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5006:10;4993:24;;;768:29;;;;;;;;;;;;;:::o;2592:353::-;678:9:1;:7;:9::i;:::-;670:18;;;;;;;;2688:15:3;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:1;2728:21;;:7;:21;;;;2720:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2836:1;2809:29;;2817:6;;;;;;;;;;;2809:29;;;2801:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2892:7;2883:6;;:16;;;;;;;;;;;;;;;;;;2930:7;2915:23;;;;;;;;;;;;694:1:1;2592:353:3;:::o;3102:442::-;678:9:1;:7;:9::i;:::-;670:18;;;;;;;;3192:15:3;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3241:6;;;;;;;;;;;3233:14;;:4;:14;;;;3225:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3315:1;3299:18;;:4;:18;;;;3291:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3396:5;3377:24;;:9;:15;3387:4;3377:15;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;3369:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3461:4;3443:9;:15;3453:4;3443:15;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;3487:16;3501:1;3487:9;;:13;;:16;;;;:::i;:::-;3475:9;:28;;;;3532:4;3520:17;;;;;;;;;;;;694:1:1;3102:442:3;:::o;1355:27::-;;;;;;;;;;;;;:::o;925:24::-;;;;:::o;493:70:1:-;530:7;552:6;;;;;;;;;;;545:13;;493:70;:::o;780:83::-;819:4;852:6;;;;;;;;;;;838:20;;:10;:20;;;831:27;;780:83;:::o;995:37:3:-;;;;;;;;;;;;;:::o;647:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;4576:126::-;678:9:1;:7;:9::i;:::-;670:18;;;;;;;;4649:11:3;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4688:7;;;;;;;;;;;4687:8;4677:7;;:18;;;;;;;;;;;;;;;;;;694:1:1;4576:126:3:o;3688:124::-;678:9:1;:7;:9::i;:::-;670:18;;;;;;;;3761:15:3;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3794:11;:9;:11::i;:::-;694:1:1;3688:124:3:o;695:270:2:-;753:7;780:1;776;:5;768:14;;;;;;;;846:9;862:1;858;:5;;;;;;;;846:17;;959:1;952:8;;;695:270;;;;:::o;1272:131::-;1330:7;1345:9;1361:1;1357;:5;1345:17;;1381:1;1376;:6;;1368:15;;;;;;;;1397:1;1390:8;;;1272:131;;;;:::o;5831:509:3:-;5888:11;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5925:15;5943:62;5977:15;:27;5993:10;5977:27;;;;;;;;;;;;;;;;5943:29;5962:9;;5943:14;;:18;;:29;;;;:::i;:::-;:33;;:62;;;;:::i;:::-;5925:80;;6035:1;6024:7;:12;;6016:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6103:7;6086:4;6078:21;;;:32;;6071:40;;;;;;6146:7;6128:14;;:25;;6121:33;;;;;;6213:40;6245:7;6213:15;:27;6229:10;6213:27;;;;;;;;;;;;;;;;:31;;:40;;;;:::i;:::-;6183:15;:27;6199:10;6183:27;;;;;;;;;;;;;;;:70;;;;6263:10;:19;;:28;6283:7;6263:28;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6263:28:3;6325:7;6307:26;;;;;;;;;;1207:1;5831:509;:::o;5315:381::-;5375:11;1146:6;1137:15;;;;;;;;:5;;;;;;;;;;;:15;;;;;;;;;1129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5403:27;5433:11;;5403:41;;5485:1;5462:19;:24;;5454:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5534:1;5520:11;:15;;;;5596:6;;;;;;;;;;;:15;;:36;5612:19;5596:36;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5596:36:3;5669:19;5648:41;;;;;;;;;;1207:1;5315:381;:::o;1221:81::-;1293:1;1284:5;;;;;;;;;;;1276:14;;;;;;;;:18;1269:26;;;;;;;;1261:5;;:34;;;;;;;;;;;;;;;;;;;;;;;;1221:81::o;1078:131:2:-;1136:7;1164:1;1159;:6;;1151:15;;;;;;;;1172:9;1188:1;1184;:5;1172:17;;1203:1;1196:8;;;1078:131;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./SafeMath.sol\"; \nimport \"./Ownable.sol\";\n\n\n/// @author Saga Arvidsdotter - <hello@sagaarvidsdotter.com>\n/// @title SplitRevenue - Splitting revenue from a song between artist and fans. \n \n \ncontract SplitRevenue is Ownable {\n    using SafeMath for uint256; \n\n    event ArtistAddition(address indexed artistFeatured);\n    event FanAddition(address indexed fansFeatured);\n    event RevenueDeposit(uint256 indexed revenue);\n    event ArtistRevenuePayment(uint256 indexed artistRevenuePayment);\n    event FanRevenuePayment(uint256 indexed fanRevenuePayment); \n    event SelfDestruction(string indexed message); \n\n    mapping(address => bool) public fanExists;\n    mapping(address => uint256) private _fanEthReleased; //split pattern \n    address payable public artist;\n    uint256 private artistSplit; // artistSplitCurrent\n    uint256 private fansSplitTotal; //split pattern fmr: fansSplit\n    uint256 public fansCount; //split pattern\n\n    // State Machine  \n    Stages public stage = Stages.Creation;\n\n    enum Stages {\n        Creation, Open\n    }\n\n    modifier atStage(Stages _stage) {\n        require(stage == _stage, \"Function can not be called at this time.\");\n        _;\n    }\n\n    function nextStage() internal {\n        stage = Stages(uint256(stage) + 1);\n    }\n\n    // Circuit Breaker different contract file\n    bool public stopped = false;\n\n    modifier stopInEmergency {\n        require(!stopped, \"Emergency; this function can not be called.\");\n        _;\n    }\n\n   \n    /// Public functions. \n   \n    /// @dev Contract constructor sets starting values of balances and number of fans to 0.    \n    constructor() public {\n        artistSplit = 0;\n        fansCount = 0;\n        fansSplitTotal = 0;\n    }\n\n    /// @dev Allows anyone to deposit ether and split half for the artist and half equally between fans.\n    /// @dev Access is restricted to stage Open. An owner can disallow access in emergency. \n    function paySplit() \n        external \n        payable \n        atStage(Stages.Open) \n        stopInEmergency \n    {\n        require(msg.value > 0, \"enough funds have not been provided\"); //behövs?\n        //require(msg.data.length == 0); ?\n        require(fansCount >= 1, \"not enough fans in contract\");\n\n        artistSplit =  artistSplit.add(msg.value.div(2)); \n        fansSplitTotal += msg.value.div(2); \n\n        emit RevenueDeposit(msg.value);\n    }\n  \n    /// @dev Allows an owner to add an artist if one does not exist yet.\n    /// @dev Access is restricted to the Creation stage. \n    /// @param _artist Address of artist.   \n    function addArtist(address payable _artist) \n        public \n        onlyOwner \n        atStage(Stages.Creation) \n    {\n        require(_artist != address(0), \"you have not supplied a valid address\");\n        require(address(artist) == address(0), \"artist address already exists\"); \n        artist = _artist;\n\n        emit ArtistAddition(_artist);\n    }\n   \n    /// @dev Allows an owner to add a new fan. \n    /// @dev Access is restricted to the Creation stage.\n    /// @param _fan Address of new fan.   \n    function addFan(address payable _fan) \n        public \n        onlyOwner \n        atStage(Stages.Creation) \n    { \n        require(_fan != artist, \"address is already the artist\");\n        require(_fan != address(0), \"you have not supplied a valid address\");\n        require(fanExists[_fan] == false, \"fan address already exists\");\n\n        fanExists[_fan] = true;\n        fansCount = fansCount.add(1); \n\n        emit FanAddition(_fan);\n    }\n   \n    /// @dev Allows an owner to change stage from Creation to Open. \n    /// @dev Access is restricted to stage Creation.  // behövs?\n    function openSplit() \n        public \n        onlyOwner \n        atStage(Stages.Creation) \n    { \n        nextStage();\n    }\n   \n    /// @dev Allows a fan or artist to withdraw their ether split. \n    /// @dev Access is restricted to stage Open. \n    function withdraw() \n        public \n        atStage(Stages.Open) \n    {  //withdraw pattern\n        require(address(this).balance > 0, \"contract balance is not enough for withdraw\");\n        require(fansCount >= 1, \"not enough fans in contract\");\n        \n        if(fanExists[msg.sender]){\n            fanWithdraw();\n        } else if(msg.sender == artist) {\n            artistWithdraw();\n        } else {\n            revert(\"msg.sender is not a fan or an artist\");\n        }\n    }\n  \n    /// @dev In emergency allows an owner to toggle an access restriction modifier on and off.\n    /// @dev Access is restricted to stage Open.  \n    function emergency() \n        public \n        onlyOwner \n        atStage(Stages.Open) \n    {\n        stopped = !stopped;\n    }\n \n    /// @dev Allows an owner to self destruct contract.\n    /// @dev Access is restriced to stage Creation. \n    function kill() \n        public \n        onlyOwner \n        atStage(Stages.Creation) \n    {\n        emit SelfDestruction(\"Contract Self Destructed\"); //funkar detta?\n\n        selfdestruct(msg.sender);\n    }\n\n    \n    /// Private functions.  //or internal?\n\n    /// @dev Transfer artist remaining ether split to artist address. //write remaining or not remaining?\n    /// @dev Access is restricted to stage Open.  //skriva det eller är det redan antaget? skriva mer för att visa intern func?\n    function artistWithdraw() \n        private \n        atStage(Stages.Open) \n    {\n        uint256 artistSplitWithdraw = artistSplit;\n        require(artistSplitWithdraw != 0, \"artist balance is 0\");\n        artistSplit = 0; //preventing re-entrancy attacks (race conditions)\n        artist.transfer(artistSplitWithdraw);\n\n        emit ArtistRevenuePayment(artistSplitWithdraw);\n    }\n    \n    /// @dev Transfer fan's remaining ether split to fan address. //fan's?\n    /// @dev Access is restricted to stage Open. \n    function fanWithdraw() \n        private \n        atStage(Stages.Open) \n    { /// time\n        uint256 payment = fansSplitTotal.div(fansCount).sub(_fanEthReleased[msg.sender]); \n        require(payment != 0, \"payment is 0\"); // >0 ?\n        assert(address(this).balance >= payment);\n        assert(fansSplitTotal >= payment); // behövs båda?\n\n        _fanEthReleased[msg.sender] = _fanEthReleased[msg.sender].add(payment);\n        msg.sender.transfer(payment);\n\n        emit FanRevenuePayment(payment);\n    }\n\n    /*\n    * Web3 call functions\n    */\n\n    // getFanExists() //mapping så denna behövs?\n    // getArtist() finns dessa redan i o m public?\n    // getFanCount()\n    // get()\n}\n",
  "sourcePath": "/home/saga/Desktop/ConsenSys-Bootcamp/final-project-SagaDott/contracts/SplitRevenue.sol",
  "ast": {
    "absolutePath": "/home/saga/Desktop/ConsenSys-Bootcamp/final-project-SagaDott/contracts/SplitRevenue.sol",
    "exportedSymbols": {
      "SplitRevenue": [
        678
      ]
    },
    "id": 679,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/saga/Desktop/ConsenSys-Bootcamp/final-project-SagaDott/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 229,
        "nodeType": "ImportDirective",
        "scope": 679,
        "sourceUnit": 227,
        "src": "25:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/saga/Desktop/ConsenSys-Bootcamp/final-project-SagaDott/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 230,
        "nodeType": "ImportDirective",
        "scope": 679,
        "sourceUnit": 99,
        "src": "51:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 231,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 98,
              "src": "249:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$98",
                "typeString": "contract Ownable"
              }
            },
            "id": 232,
            "nodeType": "InheritanceSpecifier",
            "src": "249:7:3"
          }
        ],
        "contractDependencies": [
          98
        ],
        "contractKind": "contract",
        "documentation": "@author Saga Arvidsdotter - <hello@sagaarvidsdotter.com>\n @title SplitRevenue - Splitting revenue from a song between artist and fans. ",
        "fullyImplemented": true,
        "id": 678,
        "linearizedBaseContracts": [
          678,
          98
        ],
        "name": "SplitRevenue",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 235,
            "libraryName": {
              "contractScope": null,
              "id": 233,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 226,
              "src": "269:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$226",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "263:27:3",
            "typeName": {
              "id": 234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "282:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 239,
            "name": "ArtistAddition",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "indexed": true,
                  "name": "artistFeatured",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "318:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:32:3"
            },
            "src": "297:53:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 243,
            "name": "FanAddition",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "indexed": true,
                  "name": "fansFeatured",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "373:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:30:3"
            },
            "src": "355:48:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 247,
            "name": "RevenueDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "indexed": true,
                  "name": "revenue",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "429:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "428:25:3"
            },
            "src": "408:46:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 251,
            "name": "ArtistRevenuePayment",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "indexed": true,
                  "name": "artistRevenuePayment",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "486:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "485:38:3"
            },
            "src": "459:65:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 255,
            "name": "FanRevenuePayment",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "indexed": true,
                  "name": "fanRevenuePayment",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "553:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:35:3"
            },
            "src": "529:59:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 259,
            "name": "SelfDestruction",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "indexed": true,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "616:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:24:3"
            },
            "src": "594:46:3"
          },
          {
            "constant": false,
            "id": 263,
            "name": "fanExists",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "647:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 262,
              "keyType": {
                "id": 260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "655:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "647:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 261,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "666:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 267,
            "name": "_fanEthReleased",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "694:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 266,
              "keyType": {
                "id": 264,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "702:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "694:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 265,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "713:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 269,
            "name": "artist",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "768:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 268,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "768:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 271,
            "name": "artistSplit",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "803:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 270,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "803:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 273,
            "name": "fansSplitTotal",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "858:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 272,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 275,
            "name": "fansCount",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "925:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 274,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "925:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 279,
            "name": "stage",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "995:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stages_$282",
              "typeString": "enum SplitRevenue.Stages"
            },
            "typeName": {
              "contractScope": null,
              "id": 276,
              "name": "Stages",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "995:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stages_$282",
                "typeString": "enum SplitRevenue.Stages"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 277,
                "name": "Stages",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 282,
                "src": "1017:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                  "typeString": "type(enum SplitRevenue.Stages)"
                }
              },
              "id": 278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "Creation",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1017:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stages_$282",
                "typeString": "enum SplitRevenue.Stages"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SplitRevenue.Stages",
            "id": 282,
            "members": [
              {
                "id": 280,
                "name": "Creation",
                "nodeType": "EnumValue",
                "src": "1061:8:3"
              },
              {
                "id": 281,
                "name": "Open",
                "nodeType": "EnumValue",
                "src": "1071:4:3"
              }
            ],
            "name": "Stages",
            "nodeType": "EnumDefinition",
            "src": "1039:42:3"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "1119:96:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stages_$282",
                          "typeString": "enum SplitRevenue.Stages"
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "1137:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$282",
                            "typeString": "enum SplitRevenue.Stages"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "_stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "1146:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$282",
                            "typeString": "enum SplitRevenue.Stages"
                          }
                        },
                        "src": "1137:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746869732074696d652e",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1154:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c383f2e0d65d9307ae238bc9d3f03b48b91dc9f1ee09902d87a9b09760624203",
                          "typeString": "literal_string \"Function can not be called at this time.\""
                        },
                        "value": "Function can not be called at this time."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c383f2e0d65d9307ae238bc9d3f03b48b91dc9f1ee09902d87a9b09760624203",
                          "typeString": "literal_string \"Function can not be called at this time.\""
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "1129:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1129:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:68:3"
                },
                {
                  "id": 293,
                  "nodeType": "PlaceholderStatement",
                  "src": "1207:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 295,
            "name": "atStage",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "_stage",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "1104:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stages_$282",
                    "typeString": "enum SplitRevenue.Stages"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 283,
                    "name": "Stages",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 282,
                    "src": "1104:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1103:15:3"
            },
            "src": "1087:128:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "1251:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 298,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "1261:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stages_$282",
                        "typeString": "enum SplitRevenue.Stages"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 301,
                                "name": "stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 279,
                                "src": "1284:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stages_$282",
                                  "typeString": "enum SplitRevenue.Stages"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Stages_$282",
                                  "typeString": "enum SplitRevenue.Stages"
                                }
                              ],
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1276:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1276:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1293:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1276:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 299,
                        "name": "Stages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "1269:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                          "typeString": "type(enum SplitRevenue.Stages)"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1269:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stages_$282",
                        "typeString": "enum SplitRevenue.Stages"
                      }
                    },
                    "src": "1261:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:34:3"
                }
              ]
            },
            "documentation": null,
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextStage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:2:3"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:3"
            },
            "scope": 678,
            "src": "1221:81:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 312,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "1355:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 310,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1355:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 311,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1377:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1414:92:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1432:8:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 315,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "1433:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "456d657267656e63793b20746869732066756e6374696f6e2063616e206e6f742062652063616c6c65642e",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1442:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54982926d4fdf4bebc6e6768e07a6fe5f189f95d3e91c72d25d8ca066ea528a3",
                          "typeString": "literal_string \"Emergency; this function can not be called.\""
                        },
                        "value": "Emergency; this function can not be called."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54982926d4fdf4bebc6e6768e07a6fe5f189f95d3e91c72d25d8ca066ea528a3",
                          "typeString": "literal_string \"Emergency; this function can not be called.\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "1424:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:64:3"
                },
                {
                  "id": 320,
                  "nodeType": "PlaceholderStatement",
                  "src": "1498:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 322,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:0:3"
            },
            "src": "1389:117:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "1664:83:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 325,
                      "name": "artistSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "1674:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1688:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1674:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 329,
                      "name": "fansCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "1699:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1711:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1699:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 333,
                      "name": "fansSplitTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "1722:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1739:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1722:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:18:3"
                }
              ]
            },
            "documentation": "Public functions. \n @dev Contract constructor sets starting values of balances and number of fans to 0.    ",
            "id": 338,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:2:3"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1664:0:3"
            },
            "scope": 678,
            "src": "1643:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "2066:342:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 348,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "2084:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2084:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2096:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2084:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656e6f7567682066756e64732068617665206e6f74206265656e2070726f7669646564",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2099:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e73595f0e16bfc3b5f7c7a80e3777d5d39726b47015ccd735047b83a6d13744",
                          "typeString": "literal_string \"enough funds have not been provided\""
                        },
                        "value": "enough funds have not been provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e73595f0e16bfc3b5f7c7a80e3777d5d39726b47015ccd735047b83a6d13744",
                          "typeString": "literal_string \"enough funds have not been provided\""
                        }
                      ],
                      "id": 347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2076:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 356,
                          "name": "fansCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "2209:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2222:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2209:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066616e7320696e20636f6e7472616374",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        },
                        "value": "not enough fans in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2201:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 362,
                      "name": "artistSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2266:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2311:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 365,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "2297:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2297:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 157,
                            "src": "2297:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2297:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 363,
                          "name": "artistSplit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "2281:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 205,
                        "src": "2281:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2281:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2266:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 373,
                      "name": "fansSplitTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "2325:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2357:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "2343:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2343:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157,
                        "src": "2343:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2343:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2325:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:34:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "2391:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2391:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 381,
                      "name": "RevenueDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "2376:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "EmitStatement",
                  "src": "2371:30:3"
                }
              ]
            },
            "documentation": "@dev Allows anyone to deposit ether and split half for the artist and half equally between fans.\n @dev Access is restricted to stage Open. An owner can disallow access in emergency. ",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "2023:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2023:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 343,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 340,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "2015:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2015:20:3"
              },
              {
                "arguments": null,
                "id": 345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 344,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 322,
                  "src": "2045:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:15:3"
              }
            ],
            "name": "paySplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:2:3"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2066:0:3"
            },
            "scope": 678,
            "src": "1951:457:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "2710:235:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "_artist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "2728:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2747:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2739:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2739:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2728:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752068617665206e6f7420737570706c69656420612076616c69642061646472657373",
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2751:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        },
                        "value": "you have not supplied a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2720:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 409,
                              "name": "artist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "2817:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2809:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2809:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2836:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2828:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2828:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2809:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "617274697374206164647265737320616c726561647920657869737473",
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cafbd460bfe71f4924377a27ba06017ff35f45a7becbe40572a61446ba1f50a",
                          "typeString": "literal_string \"artist address already exists\""
                        },
                        "value": "artist address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cafbd460bfe71f4924377a27ba06017ff35f45a7becbe40572a61446ba1f50a",
                          "typeString": "literal_string \"artist address already exists\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2801:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 418,
                      "name": "artist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "2883:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "_artist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "2892:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2883:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:16:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "_artist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2930:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 422,
                      "name": "ArtistAddition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "2915:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2915:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 425,
                  "nodeType": "EmitStatement",
                  "src": "2910:28:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to add an artist if one does not exist yet.\n @dev Access is restricted to the Creation stage. \n @param _artist Address of artist.   ",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 392,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 391,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "2661:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2661:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "2688:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2688:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 393,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "2680:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2680:24:3"
              }
            ],
            "name": "addArtist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "name": "_artist",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "2611:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2610:25:3"
            },
            "returnParameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2710:0:3"
            },
            "scope": 678,
            "src": "2592:353:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "3214:330:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 439,
                          "name": "_fan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "3233:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 440,
                          "name": "artist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "3241:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3233:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6164647265737320697320616c72656164792074686520617274697374",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3249:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14a3df48270f0cd06af73ad12e2d827d20e39bf6afd345c7000bbdc86b41758e",
                          "typeString": "literal_string \"address is already the artist\""
                        },
                        "value": "address is already the artist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14a3df48270f0cd06af73ad12e2d827d20e39bf6afd345c7000bbdc86b41758e",
                          "typeString": "literal_string \"address is already the artist\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "3225:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3225:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 446,
                          "name": "_fan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "3299:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3315:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3307:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3307:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3299:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752068617665206e6f7420737570706c69656420612076616c69642061646472657373",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3319:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        },
                        "value": "you have not supplied a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "3291:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "fanExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "3377:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 456,
                            "name": "_fan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "3387:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3377:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3396:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3377:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616e206164647265737320616c726561647920657869737473",
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3403:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_299813fdb3a2503b8a68ec7f6bbbd06cf2aa18c72e64162c7351a241595d9b73",
                          "typeString": "literal_string \"fan address already exists\""
                        },
                        "value": "fan address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_299813fdb3a2503b8a68ec7f6bbbd06cf2aa18c72e64162c7351a241595d9b73",
                          "typeString": "literal_string \"fan address already exists\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "3369:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3369:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "3369:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "fanExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3443:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 465,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 464,
                        "name": "_fan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3453:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3443:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3461:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3443:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "fansCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3475:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3501:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "fansCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "3487:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 205,
                        "src": "3487:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3487:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3475:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "_fan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3532:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 476,
                      "name": "FanAddition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "3520:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3520:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "EmitStatement",
                  "src": "3515:22:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to add a new fan. \n @dev Access is restricted to the Creation stage.\n @param _fan Address of new fan.   ",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 432,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 431,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "3165:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3165:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 434,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "3192:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3192:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 436,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 433,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "3184:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3184:24:3"
              }
            ],
            "name": "addFan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "name": "_fan",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "3118:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3117:22:3"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3214:0:3"
            },
            "scope": 678,
            "src": "3102:442:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "3783:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 490,
                      "name": "nextStage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "3794:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:11:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to change stage from Creation to Open. \n @dev Access is restricted to stage Creation.  // behövs?",
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 483,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "3734:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3734:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "3761:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3761:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 488,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 485,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "3753:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3753:24:3"
              }
            ],
            "name": "openSplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3706:2:3"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:0:3"
            },
            "scope": 678,
            "src": "3688:124:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "4010:412:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 503,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 712,
                                "src": "4056:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              ],
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4048:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4048:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4048:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4072:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4048:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e74726163742062616c616e6365206973206e6f7420656e6f75676820666f72207769746864726177",
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4075:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17dbc021d0614bc62c7a690696c7c92e675f437cb3931f8dc023c47756dd772a",
                          "typeString": "literal_string \"contract balance is not enough for withdraw\""
                        },
                        "value": "contract balance is not enough for withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17dbc021d0614bc62c7a690696c7c92e675f437cb3931f8dc023c47756dd772a",
                          "typeString": "literal_string \"contract balance is not enough for withdraw\""
                        }
                      ],
                      "id": 501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "4040:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:81:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 512,
                          "name": "fansCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "4139:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4152:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4139:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066616e7320696e20636f6e7472616374",
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4155:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        },
                        "value": "not enough fans in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        }
                      ],
                      "id": 511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "4131:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:54:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "fanExists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "4207:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 521,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "4217:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4217:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4207:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "4276:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4276:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "artist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "4290:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "4276:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 538,
                      "nodeType": "Block",
                      "src": "4345:71:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "6d73672e73656e646572206973206e6f7420612066616e206f7220616e20617274697374",
                                "id": 535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4366:38:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5ebbe46ec2954673053cdce7a2ee9c202ccac3cf58664acd16bd0747af36fba2",
                                  "typeString": "literal_string \"msg.sender is not a fan or an artist\""
                                },
                                "value": "msg.sender is not a fan or an artist"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5ebbe46ec2954673053cdce7a2ee9c202ccac3cf58664acd16bd0747af36fba2",
                                  "typeString": "literal_string \"msg.sender is not a fan or an artist\""
                                }
                              ],
                              "id": 534,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                698,
                                699
                              ],
                              "referencedDeclaration": 699,
                              "src": "4359:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4359:46:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 537,
                          "nodeType": "ExpressionStatement",
                          "src": "4359:46:3"
                        }
                      ]
                    },
                    "id": 539,
                    "nodeType": "IfStatement",
                    "src": "4273:143:3",
                    "trueBody": {
                      "id": 533,
                      "nodeType": "Block",
                      "src": "4298:41:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 530,
                              "name": "artistWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "4312:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4312:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 532,
                          "nodeType": "ExpressionStatement",
                          "src": "4312:16:3"
                        }
                      ]
                    }
                  },
                  "id": 540,
                  "nodeType": "IfStatement",
                  "src": "4204:212:3",
                  "trueBody": {
                    "id": 525,
                    "nodeType": "Block",
                    "src": "4229:38:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 522,
                            "name": "fanWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "4243:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4243:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "4243:13:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Allows a fan or artist to withdraw their ether split. \n @dev Access is restricted to stage Open. ",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 497,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "3992:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3992:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 499,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 496,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "3984:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3984:20:3"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3956:2:3"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4010:0:3"
            },
            "scope": 678,
            "src": "3939:483:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "4667:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "4677:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4687:8:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 552,
                        "name": "stopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4688:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4677:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:18:3"
                }
              ]
            },
            "documentation": "@dev In emergency allows an owner to toggle an access restriction modifier on and off.\n @dev Access is restricted to stage Open.  ",
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 544,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "4622:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4622:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 547,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "4649:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4649:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 549,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 546,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "4641:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4641:20:3"
              }
            ],
            "name": "emergency",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4594:2:3"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4667:0:3"
            },
            "scope": 678,
            "src": "4576:126:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "4908:116:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742053656c662044657374727563746564",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4939:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4739e25e5c5b3c52c09ade965c1cecbb2f36492182f4fd4793eb26351bd9cda9",
                          "typeString": "literal_string \"Contract Self Destructed\""
                        },
                        "value": "Contract Self Destructed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4739e25e5c5b3c52c09ade965c1cecbb2f36492182f4fd4793eb26351bd9cda9",
                          "typeString": "literal_string \"Contract Self Destructed\""
                        }
                      ],
                      "id": 566,
                      "name": "SelfDestruction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "4923:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4923:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "EmitStatement",
                  "src": "4918:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 571,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "5006:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5006:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 570,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "4993:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4993:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:24:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to self destruct contract.\n @dev Access is restriced to stage Creation. ",
            "id": 576,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 560,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 559,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "4859:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4859:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "4886:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4886:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 564,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 561,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "4878:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4878:24:3"
              }
            ],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4831:2:3"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:3"
            },
            "scope": 678,
            "src": "4818:206:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "5393:303:3",
              "statements": [
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "name": "artistSplitWithdraw",
                      "nodeType": "VariableDeclaration",
                      "scope": 608,
                      "src": "5403:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5403:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 586,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 585,
                    "name": "artistSplit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 271,
                    "src": "5433:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5403:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "artistSplitWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "5462:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5485:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5462:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6172746973742062616c616e63652069732030",
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5488:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a304599213a2ccd61bf6222b6cbcc988be926decd80f387f1790b5ec9ed73566",
                          "typeString": "literal_string \"artist balance is 0\""
                        },
                        "value": "artist balance is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a304599213a2ccd61bf6222b6cbcc988be926decd80f387f1790b5ec9ed73566",
                          "typeString": "literal_string \"artist balance is 0\""
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "5454:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "5454:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "artistSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "5520:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5534:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5520:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "5520:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "artistSplitWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5612:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "artist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "5596:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5596:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5596:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "5596:36:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "artistSplitWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5669:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 604,
                      "name": "ArtistRevenuePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "5648:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5648:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "EmitStatement",
                  "src": "5643:46:3"
                }
              ]
            },
            "documentation": "Private functions.  //or internal?\n @dev Transfer artist remaining ether split to artist address. //write remaining or not remaining?\n @dev Access is restricted to stage Open.  //skriva det eller är det redan antaget? skriva mer för att visa intern func?",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 579,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "5375:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5375:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 581,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 578,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "5367:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5367:20:3"
              }
            ],
            "name": "artistWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5338:2:3"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5393:0:3"
            },
            "scope": 678,
            "src": "5315:381:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "5906:434:3",
              "statements": [
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "5925:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5925:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 628,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 623,
                          "name": "_fanEthReleased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "5977:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 626,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 624,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "5993:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5993:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5977:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 620,
                            "name": "fansCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5962:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 618,
                            "name": "fansSplitTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "5943:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 157,
                          "src": "5943:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5943:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 181,
                      "src": "5943:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5943:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5925:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6024:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6035:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6024:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e742069732030",
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6038:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0900776b16422cdd376a5e8d1ac54ac00c60abe9d2f80ed9b5e7da53395c5f5",
                          "typeString": "literal_string \"payment is 0\""
                        },
                        "value": "payment is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0900776b16422cdd376a5e8d1ac54ac00c60abe9d2f80ed9b5e7da53395c5f5",
                          "typeString": "literal_string \"payment is 0\""
                        }
                      ],
                      "id": 629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "6016:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6016:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "6016:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 638,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 712,
                                "src": "6086:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              ],
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6078:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6078:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6078:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6103:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6078:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 636,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "6071:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6071:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "6071:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 646,
                          "name": "fansSplitTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "6128:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 647,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6146:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6128:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 645,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "6121:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "_fanEthReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "6183:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 652,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "6199:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6199:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6183:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 660,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6245:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 655,
                            "name": "_fanEthReleased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "6213:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 658,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 656,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "6229:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6229:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6213:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 205,
                        "src": "6213:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6213:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6183:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 669,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "6283:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 664,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "6263:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6263:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6263:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6263:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "6263:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "6325:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 672,
                      "name": "FanRevenuePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "6307:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6307:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "EmitStatement",
                  "src": "6302:31:3"
                }
              ]
            },
            "documentation": "@dev Transfer fan's remaining ether split to fan address. //fan's?\n @dev Access is restricted to stage Open. ",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "5888:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5888:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 611,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "5880:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5880:20:3"
              }
            ],
            "name": "fanWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5851:2:3"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5906:0:3"
            },
            "scope": 678,
            "src": "5831:509:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 679,
        "src": "224:6296:3"
      }
    ],
    "src": "0:6521:3"
  },
  "legacyAST": {
    "absolutePath": "/home/saga/Desktop/ConsenSys-Bootcamp/final-project-SagaDott/contracts/SplitRevenue.sol",
    "exportedSymbols": {
      "SplitRevenue": [
        678
      ]
    },
    "id": 679,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/saga/Desktop/ConsenSys-Bootcamp/final-project-SagaDott/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 229,
        "nodeType": "ImportDirective",
        "scope": 679,
        "sourceUnit": 227,
        "src": "25:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/saga/Desktop/ConsenSys-Bootcamp/final-project-SagaDott/contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 230,
        "nodeType": "ImportDirective",
        "scope": 679,
        "sourceUnit": 99,
        "src": "51:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 231,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 98,
              "src": "249:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$98",
                "typeString": "contract Ownable"
              }
            },
            "id": 232,
            "nodeType": "InheritanceSpecifier",
            "src": "249:7:3"
          }
        ],
        "contractDependencies": [
          98
        ],
        "contractKind": "contract",
        "documentation": "@author Saga Arvidsdotter - <hello@sagaarvidsdotter.com>\n @title SplitRevenue - Splitting revenue from a song between artist and fans. ",
        "fullyImplemented": true,
        "id": 678,
        "linearizedBaseContracts": [
          678,
          98
        ],
        "name": "SplitRevenue",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 235,
            "libraryName": {
              "contractScope": null,
              "id": 233,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 226,
              "src": "269:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$226",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "263:27:3",
            "typeName": {
              "id": 234,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "282:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 239,
            "name": "ArtistAddition",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 237,
                  "indexed": true,
                  "name": "artistFeatured",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "318:30:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "317:32:3"
            },
            "src": "297:53:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 243,
            "name": "FanAddition",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 241,
                  "indexed": true,
                  "name": "fansFeatured",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "373:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 240,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "372:30:3"
            },
            "src": "355:48:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 247,
            "name": "RevenueDeposit",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "indexed": true,
                  "name": "revenue",
                  "nodeType": "VariableDeclaration",
                  "scope": 247,
                  "src": "429:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 244,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "429:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "428:25:3"
            },
            "src": "408:46:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 251,
            "name": "ArtistRevenuePayment",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 249,
                  "indexed": true,
                  "name": "artistRevenuePayment",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "486:36:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 248,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "486:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "485:38:3"
            },
            "src": "459:65:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 255,
            "name": "FanRevenuePayment",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "indexed": true,
                  "name": "fanRevenuePayment",
                  "nodeType": "VariableDeclaration",
                  "scope": 255,
                  "src": "553:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "553:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "552:35:3"
            },
            "src": "529:59:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 259,
            "name": "SelfDestruction",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "indexed": true,
                  "name": "message",
                  "nodeType": "VariableDeclaration",
                  "scope": 259,
                  "src": "616:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "615:24:3"
            },
            "src": "594:46:3"
          },
          {
            "constant": false,
            "id": 263,
            "name": "fanExists",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "647:41:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 262,
              "keyType": {
                "id": 260,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "655:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "647:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 261,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "666:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 267,
            "name": "_fanEthReleased",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "694:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 266,
              "keyType": {
                "id": 264,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "702:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "694:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 265,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "713:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 269,
            "name": "artist",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "768:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 268,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "768:15:3",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 271,
            "name": "artistSplit",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "803:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 270,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "803:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 273,
            "name": "fansSplitTotal",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "858:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 272,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "858:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 275,
            "name": "fansCount",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "925:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 274,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "925:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 279,
            "name": "stage",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "995:37:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_Stages_$282",
              "typeString": "enum SplitRevenue.Stages"
            },
            "typeName": {
              "contractScope": null,
              "id": 276,
              "name": "Stages",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 282,
              "src": "995:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stages_$282",
                "typeString": "enum SplitRevenue.Stages"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 277,
                "name": "Stages",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 282,
                "src": "1017:6:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                  "typeString": "type(enum SplitRevenue.Stages)"
                }
              },
              "id": 278,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "Creation",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1017:15:3",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_Stages_$282",
                "typeString": "enum SplitRevenue.Stages"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "SplitRevenue.Stages",
            "id": 282,
            "members": [
              {
                "id": 280,
                "name": "Creation",
                "nodeType": "EnumValue",
                "src": "1061:8:3"
              },
              {
                "id": 281,
                "name": "Open",
                "nodeType": "EnumValue",
                "src": "1071:4:3"
              }
            ],
            "name": "Stages",
            "nodeType": "EnumDefinition",
            "src": "1039:42:3"
          },
          {
            "body": {
              "id": 294,
              "nodeType": "Block",
              "src": "1119:96:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_Stages_$282",
                          "typeString": "enum SplitRevenue.Stages"
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 287,
                          "name": "stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 279,
                          "src": "1137:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$282",
                            "typeString": "enum SplitRevenue.Stages"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 288,
                          "name": "_stage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "1146:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Stages_$282",
                            "typeString": "enum SplitRevenue.Stages"
                          }
                        },
                        "src": "1137:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e2063616e206e6f742062652063616c6c656420617420746869732074696d652e",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1154:42:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c383f2e0d65d9307ae238bc9d3f03b48b91dc9f1ee09902d87a9b09760624203",
                          "typeString": "literal_string \"Function can not be called at this time.\""
                        },
                        "value": "Function can not be called at this time."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c383f2e0d65d9307ae238bc9d3f03b48b91dc9f1ee09902d87a9b09760624203",
                          "typeString": "literal_string \"Function can not be called at this time.\""
                        }
                      ],
                      "id": 286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "1129:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1129:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:68:3"
                },
                {
                  "id": 293,
                  "nodeType": "PlaceholderStatement",
                  "src": "1207:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 295,
            "name": "atStage",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "name": "_stage",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "1104:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Stages_$282",
                    "typeString": "enum SplitRevenue.Stages"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 283,
                    "name": "Stages",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 282,
                    "src": "1104:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1103:15:3"
            },
            "src": "1087:128:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "1251:51:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 298,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "1261:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stages_$282",
                        "typeString": "enum SplitRevenue.Stages"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 301,
                                "name": "stage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 279,
                                "src": "1284:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Stages_$282",
                                  "typeString": "enum SplitRevenue.Stages"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Stages_$282",
                                  "typeString": "enum SplitRevenue.Stages"
                                }
                              ],
                              "id": 300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1276:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": "uint256"
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1276:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1293:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1276:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 299,
                        "name": "Stages",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 282,
                        "src": "1269:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                          "typeString": "type(enum SplitRevenue.Stages)"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1269:26:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Stages_$282",
                        "typeString": "enum SplitRevenue.Stages"
                      }
                    },
                    "src": "1261:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:34:3"
                }
              ]
            },
            "documentation": null,
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nextStage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:2:3"
            },
            "returnParameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1251:0:3"
            },
            "scope": 678,
            "src": "1221:81:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 312,
            "name": "stopped",
            "nodeType": "VariableDeclaration",
            "scope": 678,
            "src": "1355:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 310,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1355:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 311,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1377:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "1414:92:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1432:8:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 315,
                          "name": "stopped",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 312,
                          "src": "1433:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "456d657267656e63793b20746869732066756e6374696f6e2063616e206e6f742062652063616c6c65642e",
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1442:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54982926d4fdf4bebc6e6768e07a6fe5f189f95d3e91c72d25d8ca066ea528a3",
                          "typeString": "literal_string \"Emergency; this function can not be called.\""
                        },
                        "value": "Emergency; this function can not be called."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54982926d4fdf4bebc6e6768e07a6fe5f189f95d3e91c72d25d8ca066ea528a3",
                          "typeString": "literal_string \"Emergency; this function can not be called.\""
                        }
                      ],
                      "id": 314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "1424:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1424:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "1424:64:3"
                },
                {
                  "id": 320,
                  "nodeType": "PlaceholderStatement",
                  "src": "1498:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 322,
            "name": "stopInEmergency",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:0:3"
            },
            "src": "1389:117:3",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "1664:83:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 325,
                      "name": "artistSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "1674:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1688:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1674:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "1674:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 329,
                      "name": "fansCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "1699:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 330,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1711:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1699:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 332,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:13:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 333,
                      "name": "fansSplitTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "1722:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1739:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1722:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "1722:18:3"
                }
              ]
            },
            "documentation": "Public functions. \n @dev Contract constructor sets starting values of balances and number of fans to 0.    ",
            "id": 338,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1654:2:3"
            },
            "returnParameters": {
              "id": 324,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1664:0:3"
            },
            "scope": 678,
            "src": "1643:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 386,
              "nodeType": "Block",
              "src": "2066:342:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 348,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "2084:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2084:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2096:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2084:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "656e6f7567682066756e64732068617665206e6f74206265656e2070726f7669646564",
                        "id": 352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2099:37:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e73595f0e16bfc3b5f7c7a80e3777d5d39726b47015ccd735047b83a6d13744",
                          "typeString": "literal_string \"enough funds have not been provided\""
                        },
                        "value": "enough funds have not been provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e73595f0e16bfc3b5f7c7a80e3777d5d39726b47015ccd735047b83a6d13744",
                          "typeString": "literal_string \"enough funds have not been provided\""
                        }
                      ],
                      "id": 347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2076:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2076:61:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 354,
                  "nodeType": "ExpressionStatement",
                  "src": "2076:61:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 356,
                          "name": "fansCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "2209:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2222:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2209:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066616e7320696e20636f6e7472616374",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        },
                        "value": "not enough fans in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        }
                      ],
                      "id": 355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2201:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:54:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 362,
                      "name": "artistSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "2266:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "32",
                              "id": 368,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2311:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 365,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 693,
                                "src": "2297:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2297:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 157,
                            "src": "2297:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2297:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 363,
                          "name": "artistSplit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 271,
                          "src": "2281:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 205,
                        "src": "2281:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2281:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2266:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 372,
                  "nodeType": "ExpressionStatement",
                  "src": "2266:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 373,
                      "name": "fansSplitTotal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 273,
                      "src": "2325:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2357:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "2343:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2343:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 157,
                        "src": "2343:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2343:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2325:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:34:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 382,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "2391:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2391:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 381,
                      "name": "RevenueDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "2376:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 385,
                  "nodeType": "EmitStatement",
                  "src": "2371:30:3"
                }
              ]
            },
            "documentation": "@dev Allows anyone to deposit ether and split half for the artist and half equally between fans.\n @dev Access is restricted to stage Open. An owner can disallow access in emergency. ",
            "id": 387,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 341,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "2023:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2023:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 343,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 340,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "2015:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2015:20:3"
              },
              {
                "arguments": null,
                "id": 345,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 344,
                  "name": "stopInEmergency",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 322,
                  "src": "2045:15:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:15:3"
              }
            ],
            "name": "paySplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1968:2:3"
            },
            "returnParameters": {
              "id": 346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2066:0:3"
            },
            "scope": 678,
            "src": "1951:457:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 426,
              "nodeType": "Block",
              "src": "2710:235:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 399,
                          "name": "_artist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "2728:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2747:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2739:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2739:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2728:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752068617665206e6f7420737570706c69656420612076616c69642061646472657373",
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2751:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        },
                        "value": "you have not supplied a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2720:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2720:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "2720:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 409,
                              "name": "artist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 269,
                              "src": "2817:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2809:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2809:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2836:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2828:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2828:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2809:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "617274697374206164647265737320616c726561647920657869737473",
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0cafbd460bfe71f4924377a27ba06017ff35f45a7becbe40572a61446ba1f50a",
                          "typeString": "literal_string \"artist address already exists\""
                        },
                        "value": "artist address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0cafbd460bfe71f4924377a27ba06017ff35f45a7becbe40572a61446ba1f50a",
                          "typeString": "literal_string \"artist address already exists\""
                        }
                      ],
                      "id": 407,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "2801:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 417,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 418,
                      "name": "artist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "2883:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 419,
                      "name": "_artist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 389,
                      "src": "2892:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2883:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 421,
                  "nodeType": "ExpressionStatement",
                  "src": "2883:16:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 423,
                        "name": "_artist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 389,
                        "src": "2930:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 422,
                      "name": "ArtistAddition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 239,
                      "src": "2915:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2915:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 425,
                  "nodeType": "EmitStatement",
                  "src": "2910:28:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to add an artist if one does not exist yet.\n @dev Access is restricted to the Creation stage. \n @param _artist Address of artist.   ",
            "id": 427,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 392,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 391,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "2661:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2661:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 394,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "2688:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "2688:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 396,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 393,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "2680:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2680:24:3"
              }
            ],
            "name": "addArtist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 389,
                  "name": "_artist",
                  "nodeType": "VariableDeclaration",
                  "scope": 427,
                  "src": "2611:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2610:25:3"
            },
            "returnParameters": {
              "id": 397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2710:0:3"
            },
            "scope": 678,
            "src": "2592:353:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 480,
              "nodeType": "Block",
              "src": "3214:330:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 439,
                          "name": "_fan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "3233:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 440,
                          "name": "artist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "3241:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3233:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6164647265737320697320616c72656164792074686520617274697374",
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3249:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14a3df48270f0cd06af73ad12e2d827d20e39bf6afd345c7000bbdc86b41758e",
                          "typeString": "literal_string \"address is already the artist\""
                        },
                        "value": "address is already the artist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14a3df48270f0cd06af73ad12e2d827d20e39bf6afd345c7000bbdc86b41758e",
                          "typeString": "literal_string \"address is already the artist\""
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "3225:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3225:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 446,
                          "name": "_fan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 429,
                          "src": "3299:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3315:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3307:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3307:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3299:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "796f752068617665206e6f7420737570706c69656420612076616c69642061646472657373",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3319:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        },
                        "value": "you have not supplied a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc527a73d88aa4d7795dc4c6fbc6b0bbf55f0a0681905de16453721c8e04eddf",
                          "typeString": "literal_string \"you have not supplied a valid address\""
                        }
                      ],
                      "id": 445,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "3291:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:68:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:68:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 455,
                            "name": "fanExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "3377:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 457,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 456,
                            "name": "_fan",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "3387:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3377:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3396:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3377:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "66616e206164647265737320616c726561647920657869737473",
                        "id": 460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3403:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_299813fdb3a2503b8a68ec7f6bbbd06cf2aa18c72e64162c7351a241595d9b73",
                          "typeString": "literal_string \"fan address already exists\""
                        },
                        "value": "fan address already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_299813fdb3a2503b8a68ec7f6bbbd06cf2aa18c72e64162c7351a241595d9b73",
                          "typeString": "literal_string \"fan address already exists\""
                        }
                      ],
                      "id": 454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "3369:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3369:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 462,
                  "nodeType": "ExpressionStatement",
                  "src": "3369:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "fanExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 263,
                        "src": "3443:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 465,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 464,
                        "name": "_fan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3453:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3443:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3461:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3443:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "3443:22:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 469,
                      "name": "fansCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3475:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3501:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 470,
                          "name": "fansCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "3487:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 205,
                        "src": "3487:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3487:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3475:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 475,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 477,
                        "name": "_fan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "3532:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 476,
                      "name": "FanAddition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 243,
                      "src": "3520:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3520:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "EmitStatement",
                  "src": "3515:22:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to add a new fan. \n @dev Access is restricted to the Creation stage.\n @param _fan Address of new fan.   ",
            "id": 481,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 432,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 431,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "3165:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3165:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 434,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "3192:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3192:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 436,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 433,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "3184:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3184:24:3"
              }
            ],
            "name": "addFan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 429,
                  "name": "_fan",
                  "nodeType": "VariableDeclaration",
                  "scope": 481,
                  "src": "3118:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3118:15:3",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3117:22:3"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3214:0:3"
            },
            "scope": 678,
            "src": "3102:442:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 493,
              "nodeType": "Block",
              "src": "3783:29:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 490,
                      "name": "nextStage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "3794:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3794:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "3794:11:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to change stage from Creation to Open. \n @dev Access is restricted to stage Creation.  // behövs?",
            "id": 494,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 484,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 483,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "3734:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3734:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 486,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "3761:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3761:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 488,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 485,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "3753:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3753:24:3"
              }
            ],
            "name": "openSplit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3706:2:3"
            },
            "returnParameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3783:0:3"
            },
            "scope": 678,
            "src": "3688:124:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "4010:412:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 503,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 712,
                                "src": "4056:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              ],
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4048:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 504,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4048:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4048:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4072:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4048:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "636f6e74726163742062616c616e6365206973206e6f7420656e6f75676820666f72207769746864726177",
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4075:45:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17dbc021d0614bc62c7a690696c7c92e675f437cb3931f8dc023c47756dd772a",
                          "typeString": "literal_string \"contract balance is not enough for withdraw\""
                        },
                        "value": "contract balance is not enough for withdraw"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17dbc021d0614bc62c7a690696c7c92e675f437cb3931f8dc023c47756dd772a",
                          "typeString": "literal_string \"contract balance is not enough for withdraw\""
                        }
                      ],
                      "id": 501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "4040:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4040:81:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "4040:81:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 512,
                          "name": "fansCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "4139:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4152:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4139:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f7420656e6f7567682066616e7320696e20636f6e7472616374",
                        "id": 515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4155:29:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        },
                        "value": "not enough fans in contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_66a6836e5a74b3e5f2696ac05fb9657c321ef6a918b00d13022ecb459c2aef71",
                          "typeString": "literal_string \"not enough fans in contract\""
                        }
                      ],
                      "id": 511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "4131:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4131:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 517,
                  "nodeType": "ExpressionStatement",
                  "src": "4131:54:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 518,
                      "name": "fanExists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 263,
                      "src": "4207:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 521,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 519,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 693,
                        "src": "4217:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4217:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4207:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 526,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "4276:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4276:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 528,
                        "name": "artist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "4290:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "src": "4276:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 538,
                      "nodeType": "Block",
                      "src": "4345:71:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "6d73672e73656e646572206973206e6f7420612066616e206f7220616e20617274697374",
                                "id": 535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4366:38:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_5ebbe46ec2954673053cdce7a2ee9c202ccac3cf58664acd16bd0747af36fba2",
                                  "typeString": "literal_string \"msg.sender is not a fan or an artist\""
                                },
                                "value": "msg.sender is not a fan or an artist"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_5ebbe46ec2954673053cdce7a2ee9c202ccac3cf58664acd16bd0747af36fba2",
                                  "typeString": "literal_string \"msg.sender is not a fan or an artist\""
                                }
                              ],
                              "id": 534,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                698,
                                699
                              ],
                              "referencedDeclaration": 699,
                              "src": "4359:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4359:46:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 537,
                          "nodeType": "ExpressionStatement",
                          "src": "4359:46:3"
                        }
                      ]
                    },
                    "id": 539,
                    "nodeType": "IfStatement",
                    "src": "4273:143:3",
                    "trueBody": {
                      "id": 533,
                      "nodeType": "Block",
                      "src": "4298:41:3",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 530,
                              "name": "artistWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 609,
                              "src": "4312:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4312:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 532,
                          "nodeType": "ExpressionStatement",
                          "src": "4312:16:3"
                        }
                      ]
                    }
                  },
                  "id": 540,
                  "nodeType": "IfStatement",
                  "src": "4204:212:3",
                  "trueBody": {
                    "id": 525,
                    "nodeType": "Block",
                    "src": "4229:38:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 522,
                            "name": "fanWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 677,
                            "src": "4243:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4243:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "4243:13:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Allows a fan or artist to withdraw their ether split. \n @dev Access is restricted to stage Open. ",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 497,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "3992:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3992:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 499,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 496,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "3984:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3984:20:3"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3956:2:3"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4010:0:3"
            },
            "scope": 678,
            "src": "3939:483:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 556,
              "nodeType": "Block",
              "src": "4667:35:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 551,
                      "name": "stopped",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "4677:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "4687:8:3",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 552,
                        "name": "stopped",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "4688:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4677:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "4677:18:3"
                }
              ]
            },
            "documentation": "@dev In emergency allows an owner to toggle an access restriction modifier on and off.\n @dev Access is restricted to stage Open.  ",
            "id": 557,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 545,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 544,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "4622:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4622:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 547,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "4649:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4649:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 549,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 546,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "4641:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4641:20:3"
              }
            ],
            "name": "emergency",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4594:2:3"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4667:0:3"
            },
            "scope": 678,
            "src": "4576:126:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "4908:116:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742053656c662044657374727563746564",
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4939:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4739e25e5c5b3c52c09ade965c1cecbb2f36492182f4fd4793eb26351bd9cda9",
                          "typeString": "literal_string \"Contract Self Destructed\""
                        },
                        "value": "Contract Self Destructed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4739e25e5c5b3c52c09ade965c1cecbb2f36492182f4fd4793eb26351bd9cda9",
                          "typeString": "literal_string \"Contract Self Destructed\""
                        }
                      ],
                      "id": 566,
                      "name": "SelfDestruction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "4923:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4923:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 569,
                  "nodeType": "EmitStatement",
                  "src": "4918:48:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 571,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "5006:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "5006:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 570,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 701,
                      "src": "4993:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable)"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4993:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:24:3"
                }
              ]
            },
            "documentation": "@dev Allows an owner to self destruct contract.\n @dev Access is restriced to stage Creation. ",
            "id": 576,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 560,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 559,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 86,
                  "src": "4859:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4859:9:3"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "4886:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Creation",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4886:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 564,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 561,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "4878:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4878:24:3"
              }
            ],
            "name": "kill",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4831:2:3"
            },
            "returnParameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4908:0:3"
            },
            "scope": 678,
            "src": "4818:206:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "5393:303:3",
              "statements": [
                {
                  "assignments": [
                    584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 584,
                      "name": "artistSplitWithdraw",
                      "nodeType": "VariableDeclaration",
                      "scope": 608,
                      "src": "5403:27:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5403:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 586,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 585,
                    "name": "artistSplit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 271,
                    "src": "5433:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5403:41:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 588,
                          "name": "artistSplitWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 584,
                          "src": "5462:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5485:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5462:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6172746973742062616c616e63652069732030",
                        "id": 591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5488:21:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a304599213a2ccd61bf6222b6cbcc988be926decd80f387f1790b5ec9ed73566",
                          "typeString": "literal_string \"artist balance is 0\""
                        },
                        "value": "artist balance is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a304599213a2ccd61bf6222b6cbcc988be926decd80f387f1790b5ec9ed73566",
                          "typeString": "literal_string \"artist balance is 0\""
                        }
                      ],
                      "id": 587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "5454:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5454:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 593,
                  "nodeType": "ExpressionStatement",
                  "src": "5454:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 594,
                      "name": "artistSplit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 271,
                      "src": "5520:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5534:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5520:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "5520:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 601,
                        "name": "artistSplitWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5612:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 598,
                        "name": "artist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 269,
                        "src": "5596:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5596:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5596:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 603,
                  "nodeType": "ExpressionStatement",
                  "src": "5596:36:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 605,
                        "name": "artistSplitWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 584,
                        "src": "5669:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 604,
                      "name": "ArtistRevenuePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 251,
                      "src": "5648:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5648:41:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 607,
                  "nodeType": "EmitStatement",
                  "src": "5643:46:3"
                }
              ]
            },
            "documentation": "Private functions.  //or internal?\n @dev Transfer artist remaining ether split to artist address. //write remaining or not remaining?\n @dev Access is restricted to stage Open.  //skriva det eller är det redan antaget? skriva mer för att visa intern func?",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 579,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "5375:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5375:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 581,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 578,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "5367:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5367:20:3"
              }
            ],
            "name": "artistWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5338:2:3"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5393:0:3"
            },
            "scope": 678,
            "src": "5315:381:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 676,
              "nodeType": "Block",
              "src": "5906:434:3",
              "statements": [
                {
                  "assignments": [
                    617
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 617,
                      "name": "payment",
                      "nodeType": "VariableDeclaration",
                      "scope": 676,
                      "src": "5925:15:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 616,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5925:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 628,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 623,
                          "name": "_fanEthReleased",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "5977:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 626,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 624,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "5993:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5993:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5977:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 620,
                            "name": "fansCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "5962:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 618,
                            "name": "fansSplitTotal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "5943:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 157,
                          "src": "5943:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5943:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 181,
                      "src": "5943:33:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5943:62:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5925:80:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 630,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6024:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6035:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6024:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7061796d656e742069732030",
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6038:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0900776b16422cdd376a5e8d1ac54ac00c60abe9d2f80ed9b5e7da53395c5f5",
                          "typeString": "literal_string \"payment is 0\""
                        },
                        "value": "payment is 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0900776b16422cdd376a5e8d1ac54ac00c60abe9d2f80ed9b5e7da53395c5f5",
                          "typeString": "literal_string \"payment is 0\""
                        }
                      ],
                      "id": 629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        696,
                        697
                      ],
                      "referencedDeclaration": 697,
                      "src": "6016:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6016:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 635,
                  "nodeType": "ExpressionStatement",
                  "src": "6016:37:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 638,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 712,
                                "src": "6086:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SplitRevenue_$678",
                                  "typeString": "contract SplitRevenue"
                                }
                              ],
                              "id": 637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6078:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6078:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6078:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 641,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6103:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6078:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 636,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "6071:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6071:40:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 644,
                  "nodeType": "ExpressionStatement",
                  "src": "6071:40:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 646,
                          "name": "fansSplitTotal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 273,
                          "src": "6128:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 647,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6146:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6128:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 645,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 682,
                      "src": "6121:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6121:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 650,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "_fanEthReleased",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 267,
                        "src": "6183:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 654,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 652,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "6199:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6199:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6183:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 660,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 617,
                          "src": "6245:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 655,
                            "name": "_fanEthReleased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "6213:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 658,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 656,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 693,
                              "src": "6229:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "6229:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6213:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 205,
                        "src": "6213:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6213:40:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6183:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 669,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "6283:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 664,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 693,
                          "src": "6263:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6263:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6263:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6263:28:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "6263:28:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 673,
                        "name": "payment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 617,
                        "src": "6325:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 672,
                      "name": "FanRevenuePayment",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 255,
                      "src": "6307:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6307:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 675,
                  "nodeType": "EmitStatement",
                  "src": "6302:31:3"
                }
              ]
            },
            "documentation": "@dev Transfer fan's remaining ether split to fan address. //fan's?\n @dev Access is restricted to stage Open. ",
            "id": 677,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 612,
                      "name": "Stages",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 282,
                      "src": "5888:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_Stages_$282_$",
                        "typeString": "type(enum SplitRevenue.Stages)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "Open",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5888:11:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Stages_$282",
                      "typeString": "enum SplitRevenue.Stages"
                    }
                  }
                ],
                "id": 614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 611,
                  "name": "atStage",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 295,
                  "src": "5880:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_enum$_Stages_$282_$",
                    "typeString": "modifier (enum SplitRevenue.Stages)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5880:20:3"
              }
            ],
            "name": "fanWithdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5851:2:3"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5906:0:3"
            },
            "scope": 678,
            "src": "5831:509:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 679,
        "src": "224:6296:3"
      }
    ],
    "src": "0:6521:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "1548420184079": {
      "events": {},
      "links": {},
      "address": "0xF1558C4CE89d540f8D946B41fcCd6F8332187503",
      "transactionHash": "0xbaed8743c0ffe0ad7370fc3f2fc96115e0f203e0375960be31eeee6390d4bdbc"
    },
    "1548448838749": {
      "events": {},
      "links": {},
      "address": "0x4cCEF789c1672980A581a07DA8a1297ac5f78690",
      "transactionHash": "0x4f39e3588981e98b60caecaac8f3bbbb107bff23affedd3c33a96db04c6dfe5f"
    }
  },
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-01-25T20:41:29.534Z",
  "devdoc": {
    "author": "Saga Arvidsdotter - <hello@sagaarvidsdotter.com>",
    "methods": {
      "addArtist(address)": {
        "details": "Allows an owner to add an artist if one does not exist yet.Access is restricted to the Creation stage. ",
        "params": {
          "_artist": "Address of artist.   "
        }
      },
      "addFan(address)": {
        "details": "Allows an owner to add a new fan. Access is restricted to the Creation stage.",
        "params": {
          "_fan": "Address of new fan.   "
        }
      },
      "constructor": {
        "details": "Contract constructor sets starting values of balances and number of fans to 0.    "
      },
      "emergency()": {
        "details": "In emergency allows an owner to toggle an access restriction modifier on and off.Access is restricted to stage Open.  "
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "kill()": {
        "details": "Allows an owner to self destruct contract.Access is restriced to stage Creation. "
      },
      "openSplit()": {
        "details": "Allows an owner to change stage from Creation to Open. Access is restricted to stage Creation.  // behövs?"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "paySplit()": {
        "details": "Allows anyone to deposit ether and split half for the artist and half equally between fans.Access is restricted to stage Open. An owner can disallow access in emergency. "
      },
      "withdraw()": {
        "details": "Allows a fan or artist to withdraw their ether split. Access is restricted to stage Open. "
      }
    },
    "title": "SplitRevenue - Splitting revenue from a song between artist and fans. "
  },
  "userdoc": {
    "methods": {
      "constructor": "Public functions. "
    }
  }
}